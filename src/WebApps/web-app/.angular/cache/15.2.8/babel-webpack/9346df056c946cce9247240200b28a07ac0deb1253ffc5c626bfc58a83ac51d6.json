{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth.service\";\nexport class StockService {\n  constructor(http, _authService) {\n    this.http = http;\n    this._authService = _authService;\n    this.getData = route => {\n      return this.http.get(this.createCompleteRoute(route, environment.apiBaseUrl));\n      // return from(\n      //   this._authService.getAccessToken()\n      //   .then(token => {\n      //     const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n      //     return this.http.get(this.createCompleteRoute(route, environment.apiBaseUrl), { headers: headers }).toPromise();\n      //   })\n      // );\n    };\n\n    this.addData = (route, data) => {\n      return this.http.post(this.createCompleteRoute(route, environment.apiBaseUrl), data);\n    };\n    this.editData = (route, data) => {\n      return this.http.put(this.createCompleteRoute(route, environment.apiBaseUrl), data);\n    };\n    this.createCompleteRoute = (route, envAddress) => {\n      return `${envAddress}/${route}`;\n    };\n  }\n}\nStockService.ɵfac = function StockService_Factory(t) {\n  return new (t || StockService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n};\nStockService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StockService,\n  factory: StockService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAIA,SAASA,WAAW,QAAQ,8BAA8B;;;;AAK1D,OAAM,MAAOC,YAAY;EAEvBC,YAAoBC,IAAgB,EAAUC,YAAyB;IAAnD,SAAI,GAAJD,IAAI;IAAsB,iBAAY,GAAZC,YAAY;IACnD,YAAO,GAAIC,KAAa,IAAI;MACjC,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,IAAI,CAACC,mBAAmB,CAACF,KAAK,EAAEL,WAAW,CAACQ,UAAU,CAAC,CAAC;MAC3E;MACA;MACA;MACA;MACA;MACA;MACA;IACF,CAAC;;IAEM,YAAO,GAAG,CAACH,KAAa,EAAEI,IAAS,KAAI;MAC5C,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,IAAI,CAACH,mBAAmB,CAACF,KAAK,EAAEL,WAAW,CAACQ,UAAU,CAAC,EAAEC,IAAI,CAAC;IACpF,CAAC;IAEM,aAAQ,GAAG,CAACJ,KAAa,EAAEI,IAAS,KAAI;MAC7C,OAAO,IAAI,CAACN,IAAI,CAACQ,GAAG,CAAC,IAAI,CAACJ,mBAAmB,CAACF,KAAK,EAAEL,WAAW,CAACQ,UAAU,CAAC,EAAEC,IAAI,CAAC;IACnF,CAAC;IAIC,wBAAmB,GAAG,CAACJ,KAAa,EAAEO,UAAkB,KAAI;MAClE,OAAO,GAAGA,UAAU,IAAIP,KAAK,EAAE;IACjC,CAAC;EAxB0E;;AAFhEJ,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAY,SAAZZ,YAAY;EAAAa,YAFX;AAAM","names":["environment","StockService","constructor","http","_authService","route","get","createCompleteRoute","apiBaseUrl","data","post","put","envAddress","factory","providedIn"],"sourceRoot":"","sources":["D:\\Study\\e-stocker\\src\\WebApps\\web-app\\src\\app\\core\\services\\stock.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { from } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StockService {\n\n  constructor(private http: HttpClient, private _authService: AuthService) { }\n  public getData = (route: string) => {\n    return this.http.get(this.createCompleteRoute(route, environment.apiBaseUrl));\n      // return from(\n      //   this._authService.getAccessToken()\n      //   .then(token => {\n      //     const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n      //     return this.http.get(this.createCompleteRoute(route, environment.apiBaseUrl), { headers: headers }).toPromise();\n      //   })\n      // );\n    }\n\n    public addData = (route: string, data: any) => {\n      return this.http.post(this.createCompleteRoute(route, environment.apiBaseUrl), data);\n      }\n\n      public editData = (route: string, data: any) => {\n        return this.http.put(this.createCompleteRoute(route, environment.apiBaseUrl), data);\n        }\n\n    \n \n  private createCompleteRoute = (route: string, envAddress: string) =>    {\n    return `${envAddress}/${route}`;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}