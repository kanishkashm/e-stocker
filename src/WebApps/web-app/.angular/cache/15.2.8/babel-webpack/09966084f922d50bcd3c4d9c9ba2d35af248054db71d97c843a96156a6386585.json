{"ast":null,"code":"import { UserManager } from 'oidc-client';\nimport { Constants } from '../const';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class AuthService {\n  get idpSettings() {\n    return {\n      authority: Constants.idpAuthority,\n      client_id: Constants.clientId,\n      redirect_uri: `${Constants.clientRoot}/signin-callback`,\n      scope: \"openid profile tutorHubApi\",\n      response_type: \"code\",\n      post_logout_redirect_uri: `${Constants.clientRoot}/signout-callback`\n    };\n  }\n  constructor() {\n    this._loginChangedSubject = new Subject();\n    this.loginChanged = this._loginChangedSubject.asObservable();\n    this.isAuthenticated = () => {\n      return this._userManager.getUser().then(user => {\n        if (this._user !== user) {\n          this._loginChangedSubject.next(this.checkUser(user));\n        }\n        this._user = user;\n        return this.checkUser(user);\n      });\n    };\n    this.login = () => {\n      return this._userManager.signinRedirect();\n    };\n    this.finishLogin = () => {\n      return this._userManager.signinRedirectCallback().then(user => {\n        this._user = user;\n        console.log(\"user: \", user);\n        this._loginChangedSubject.next(this.checkUser(user));\n        return user;\n      });\n    };\n    this.logout = () => {\n      this._userManager.signoutRedirect();\n    };\n    this.finishLogout = () => {\n      this._user = null;\n      return this._userManager.signoutRedirectCallback();\n    };\n    this.checkUser = user => {\n      return !!user && !user.expired;\n    };\n    this._userManager = new UserManager(this.idpSettings);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)();\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAeA,WAAW,QAA6B,aAAa;AACpE,SAASC,SAAS,QAAQ,UAAU;AACpC,SAASC,OAAO,QAAQ,MAAM;;AAK9B,OAAM,MAAOC,WAAW;EAKtB,IAAYC,WAAW;IACrB,OAAO;MACLC,SAAS,EAAEJ,SAAS,CAACK,YAAY;MACjCC,SAAS,EAAEN,SAAS,CAACO,QAAQ;MAC7BC,YAAY,EAAE,GAAGR,SAAS,CAACS,UAAU,kBAAkB;MACvDC,KAAK,EAAE,4BAA4B;MACnCC,aAAa,EAAE,MAAM;MACrBC,wBAAwB,EAAE,GAAGZ,SAAS,CAACS,UAAU;KAClD;EACH;EACAI;IAZQ,yBAAoB,GAAG,IAAIZ,OAAO,EAAW;IAC9C,iBAAY,GAAG,IAAI,CAACa,oBAAoB,CAACC,YAAY,EAAE;IAevD,oBAAe,GAAG,MAAuB;MAC9C,OAAO,IAAI,CAACC,YAAY,CAACC,OAAO,EAAE,CACjCC,IAAI,CAACC,IAAI,IAAG;QACX,IAAG,IAAI,CAACC,KAAK,KAAKD,IAAI,EAAC;UACrB,IAAI,CAACL,oBAAoB,CAACO,IAAI,CAAC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,CAAC;;QAEtD,IAAI,CAACC,KAAK,GAAGD,IAAI;QAEjB,OAAO,IAAI,CAACG,SAAS,CAACH,IAAI,CAAC;MAC7B,CAAC,CAAC;IACJ,CAAC;IAEM,UAAK,GAAG,MAAK;MAClB,OAAO,IAAI,CAACH,YAAY,CAACO,cAAc,EAAE;IAC3C,CAAC;IAEM,gBAAW,GAAG,MAAoB;MACvC,OAAO,IAAI,CAACP,YAAY,CAACQ,sBAAsB,EAAE,CAChDN,IAAI,CAACC,IAAI,IAAG;QACX,IAAI,CAACC,KAAK,GAAGD,IAAI;QACjBM,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEP,IAAI,CAAC;QAC3B,IAAI,CAACL,oBAAoB,CAACO,IAAI,CAAC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,CAAC;QACpD,OAAOA,IAAI;MACb,CAAC,CAAC;IACJ,CAAC;IAEM,WAAM,GAAG,MAAK;MACnB,IAAI,CAACH,YAAY,CAACW,eAAe,EAAE;IACrC,CAAC;IACM,iBAAY,GAAG,MAAK;MACzB,IAAI,CAACP,KAAK,GAAG,IAAI;MACjB,OAAO,IAAI,CAACJ,YAAY,CAACY,uBAAuB,EAAE;IACpD,CAAC;IAEO,cAAS,GAAIT,IAAU,IAAa;MAC1C,OAAO,CAAC,CAACA,IAAI,IAAI,CAACA,IAAI,CAACU,OAAO;IAChC,CAAC;IAvCC,IAAI,CAACb,YAAY,GAAG,IAAIjB,WAAW,CAAC,IAAI,CAACI,WAAW,CAAC;EACvD;;AAjBWD,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAA4B,SAAX5B,WAAW;EAAA6B,YAFV;AAAM","names":["UserManager","Constants","Subject","AuthService","idpSettings","authority","idpAuthority","client_id","clientId","redirect_uri","clientRoot","scope","response_type","post_logout_redirect_uri","constructor","_loginChangedSubject","asObservable","_userManager","getUser","then","user","_user","next","checkUser","signinRedirect","signinRedirectCallback","console","log","signoutRedirect","signoutRedirectCallback","expired","factory","providedIn"],"sourceRoot":"","sources":["D:\\Study\\e-stocker\\src\\WebApps\\web-app\\src\\app\\core\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { User, UserManager, UserManagerSettings } from 'oidc-client';\nimport { Constants } from '../const';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private _userManager: UserManager;\n  private _user: any;\n  private _loginChangedSubject = new Subject<boolean>();\n  public loginChanged = this._loginChangedSubject.asObservable();\n  private get idpSettings() : UserManagerSettings {\n    return {\n      authority: Constants.idpAuthority,\n      client_id: Constants.clientId,\n      redirect_uri: `${Constants.clientRoot}/signin-callback`,\n      scope: \"openid profile tutorHubApi\",\n      response_type: \"code\",\n      post_logout_redirect_uri: `${Constants.clientRoot}/signout-callback`\n    }\n  }\n  constructor() {\n    this._userManager = new UserManager(this.idpSettings);\n  }\n\n  public isAuthenticated = (): Promise<boolean> => {\n    return this._userManager.getUser()\n    .then(user => {\n      if(this._user !== user){\n        this._loginChangedSubject.next(this.checkUser(user));\n      }\n      this._user = user;\n        \n      return this.checkUser(user);\n    })\n  }\n\n  public login = () => {\n    return this._userManager.signinRedirect();\n  }\n\n  public finishLogin = (): Promise<User> => {\n    return this._userManager.signinRedirectCallback()\n    .then(user => {\n      this._user = user;\n      console.log(\"user: \", user);\n      this._loginChangedSubject.next(this.checkUser(user));\n      return user;\n    })\n  }\n\n  public logout = () => {\n    this._userManager.signoutRedirect();\n  }\n  public finishLogout = () => {\n    this._user = null;\n    return this._userManager.signoutRedirectCallback();\n  }\n\n  private checkUser = (user : any): boolean => {\n    return !!user && !user.expired;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}