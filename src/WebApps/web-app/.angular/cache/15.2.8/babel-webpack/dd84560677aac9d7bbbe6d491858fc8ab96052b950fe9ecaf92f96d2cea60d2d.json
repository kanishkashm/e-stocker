{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { from } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth.service\";\nexport class StockService {\n  constructor(http, _authService) {\n    this.http = http;\n    this._authService = _authService;\n    this.getData = route => {\n      return from(this._authService.getAccessToken().then(token => {\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n        return this.http.get(this.createCompleteRoute(route, environment.apiBaseUrl), {\n          headers: headers\n        }).toPromise();\n      }));\n    };\n    this.createCompleteRoute = (route, envAddress) => {\n      return `${envAddress}/${route}`;\n    };\n  }\n}\nStockService.ɵfac = function StockService_Factory(t) {\n  return new (t || StockService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n};\nStockService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StockService,\n  factory: StockService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAG9D,SAASC,IAAI,QAAQ,MAAM;AAC3B,SAASC,WAAW,QAAQ,8BAA8B;;;;AAK1D,OAAM,MAAOC,YAAY;EAEvBC,YAAoBC,IAAgB,EAAUC,YAAyB;IAAnD,SAAI,GAAJD,IAAI;IAAsB,iBAAY,GAAZC,YAAY;IACnD,YAAO,GAAIC,KAAa,IAAI;MAC/B,OAAON,IAAI,CACT,IAAI,CAACK,YAAY,CAACE,cAAc,EAAE,CACjCC,IAAI,CAACC,KAAK,IAAG;QACZ,MAAMC,OAAO,GAAG,IAAIX,WAAW,EAAE,CAACY,GAAG,CAAC,eAAe,EAAE,UAAUF,KAAK,EAAE,CAAC;QACzE,OAAO,IAAI,CAACL,IAAI,CAACQ,GAAG,CAAC,IAAI,CAACC,mBAAmB,CAACP,KAAK,EAAEL,WAAW,CAACa,UAAU,CAAC,EAAE;UAAEJ,OAAO,EAAEA;QAAO,CAAE,CAAC,CAACK,SAAS,EAAE;MACjH,CAAC,CAAC,CACH;IACH,CAAC;IAEK,wBAAmB,GAAG,CAACT,KAAa,EAAEU,UAAkB,KAAI;MAClE,OAAO,GAAGA,UAAU,IAAIV,KAAK,EAAE;IACjC,CAAC;EAb0E;;AAFhEJ,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAe,SAAZf,YAAY;EAAAgB,YAFX;AAAM","names":["HttpHeaders","from","environment","StockService","constructor","http","_authService","route","getAccessToken","then","token","headers","set","get","createCompleteRoute","apiBaseUrl","toPromise","envAddress","factory","providedIn"],"sourceRoot":"","sources":["D:\\Study\\e-stocker\\src\\WebApps\\web-app\\src\\app\\core\\services\\stock.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { from } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StockService {\n\n  constructor(private http: HttpClient, private _authService: AuthService) { }\n  public getData = (route: string) => {\n      return from(\n        this._authService.getAccessToken()\n        .then(token => {\n          const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n          return this.http.get(this.createCompleteRoute(route, environment.apiBaseUrl), { headers: headers }).toPromise();\n        })\n      );\n    }\n \n  private createCompleteRoute = (route: string, envAddress: string) =>    {\n    return `${envAddress}/${route}`;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}